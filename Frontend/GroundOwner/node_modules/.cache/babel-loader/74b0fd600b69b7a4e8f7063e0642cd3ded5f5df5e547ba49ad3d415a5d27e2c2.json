{"ast":null,"code":"var _jsxFileName = \"/Users/aukte/Desktop/GroundOwner/src/Components/Reservations.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useLocation } from \"react-router-dom\";\n// import Calendar from \"./Calender\";\n\n// export default function Reservations() {\n//   const location = useLocation();\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [showFilteredBookings, setShowFilteredBookings] = useState(false);\n//   const [filteredBookings, setFilteredBookings] = useState([]);\n//   const [bookings, setBookings] = useState([]);\n\n//   // Fetch bookings from the database on component mount\n//   useEffect(() => {\n//     const fetchBookings = async () => {\n//       try {\n//         const response = await axios.get(`http://127.0.0.1:8000/bookings/${ground_id}`); // Replace with your API endpoint\n//         setBookings(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching bookings:\", error);\n//       }\n//     };\n//     fetchBookings();\n//   }, []);\n\n//   const formatDate = (date) => {\n//     return `${date.getDate()} ${date.toLocaleString(\"default\", {\n//       month: \"short\",\n//     })} ${date.getFullYear()}`;\n//   };\n\n//   const parseTime = (timeString) => {\n//     const [time, meridian] = timeString.split(\" \");\n//     let [hours, minutes] = time.split(\":\").map(Number);\n//     if (meridian === \"PM\" && hours !== 12) hours += 12;\n//     if (meridian === \"AM\" && hours === 12) hours = 0;\n//     return new Date(0, 0, 0, hours, minutes);\n//   };\n\n//   const today = new Date();\n//   const formattedToday = formatDate(today);\n\n//   const upcomingBookings = bookings.filter((booking) => {\n//     const bookingDate = new Date(booking.date);\n//     const todayDate = new Date(formattedToday);\n//     return bookingDate >= todayDate;\n//   });\n\n//   const sortedBookings = upcomingBookings.sort((a, b) => {\n//     const dateA = new Date(a.date);\n//     const dateB = new Date(b.date);\n//     if (dateA - dateB === 0) {\n//       return (\n//         parseTime(a.timing.split(\" - \")[0]) -\n//         parseTime(b.timing.split(\" - \")[0])\n//       );\n//     }\n//     return dateA - dateB;\n//   });\n\n//   const handleShowSlotsClick = () => {\n//     if (selectedDate) {\n//       const formattedDate = formatDate(selectedDate);\n//       const filtered = bookings\n//         .filter((booking) => booking.date === formattedDate)\n//         .sort(\n//           (a, b) =>\n//             parseTime(a.timing.split(\" - \")[0]) -\n//             parseTime(b.timing.split(\" - \")[0])\n//         );\n//       setFilteredBookings(filtered);\n//       setShowFilteredBookings(true);\n//     } else {\n//       alert(\"Please select a date from the calendar!\");\n//     }\n//   };\n\n//   const handlePaymentStatusChange = async (id, newStatus) => {\n//     try {\n//       // Send an update request to the backend\n//       await axios.patch(`http://localhost:5000/api/bookings/${id}`, {\n//         payment: newStatus,\n//       });\n\n//       // Update the local state\n//       const updatedBookings = bookings.map((booking) =>\n//         booking.id === id ? { ...booking, payment: newStatus } : booking\n//       );\n//       setBookings(updatedBookings);\n//     } catch (error) {\n//       console.error(\"Error updating payment status:\", error);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <div className=\"nav-style\">\n//         <div className=\"nav-underline\"></div>\n//       </div>\n\n//       {location.pathname !== \"/authpageownerlogin\" &&\n//         location.pathname !== \"/authpageownersignup\" &&\n//         location.pathname !== \"/revenuegrounddetails\" &&\n//         location.pathname !== \"/viewprofile\" &&\n//         location.pathname !== \"/help\" && (\n//           <>\n//             <div className=\"container my-5\">\n//               <h2 className=\"pt-5\" style={{ color: \"#55ad9b\" }}>\n//                 Upcoming Bookings\n//               </h2>\n//               <div className=\"reservations\">\n//                 <div className=\"reservations-list\">\n//                   {sortedBookings.length > 0 ? (\n//                     sortedBookings.map((booking) => (\n//                       <div\n//                         key={booking.id}\n//                         className=\"upcoming-booking p-3 border mb-2\"\n//                       >\n//                         <h5 style={{ color: \"#55ad9b\" }}>{booking.pitch}</h5>\n//                         <span>\n//                           <b>Timing:</b> {booking.timing}\n//                           <br />\n//                         </span>\n//                         <span>\n//                           <b>Date:</b> {booking.date}\n//                           <br />\n//                         </span>\n//                         <span>\n//                           <b>Booked By:</b> {booking.bookedBy}\n//                           <br />\n//                         </span>\n//                         <span>\n//                           <b>Contact:</b> {booking.contact}\n//                           <br />\n//                         </span>\n//                         <span>\n//                           <b>Status:</b>{\" \"}\n//                           {booking.payment ? (\n//                             <span>{booking.payment}</span>\n//                           ) : (\n//                             <>\n//                               <button\n//                                 onClick={() =>\n//                                   handlePaymentStatusChange(booking.id, \"Paid\")\n//                                 }\n//                                 className=\"btn btn-success btn-sm me-2\"\n//                               >\n//                                 Paid\n//                               </button>\n//                               <button\n//                                 onClick={() =>\n//                                   handlePaymentStatusChange(\n//                                     booking.id,\n//                                     \"UnPaid\"\n//                                   )\n//                                 }\n//                                 className=\"btn btn-warning btn-sm\"\n//                               >\n//                                 UnPaid\n//                               </button>\n//                             </>\n//                           )}\n//                           <br />\n//                         </span>\n//                       </div>\n//                     ))\n//                   ) : (\n//                     <div className=\"no-booking-message text-center mt-3\">\n//                       <h5 style={{ color: \"#0d705c\" }}>No upcoming Booking!</h5>\n//                     </div>\n//                   )}\n//                 </div>\n//                 <div className=\"calender\">\n//                   <h2 className=\"mb-5\" style={{ color: \"#55ad9b\" }}>\n//                     Check Upcoming Bookings\n//                   </h2>\n//                   <Calendar\n//                     selectedDate={selectedDate}\n//                     setSelectedDate={setSelectedDate}\n//                   />\n//                   <div className=\"booked-slots\">\n//                     <button\n//                       className=\"my-5 slots-button dropdown btn-back\"\n//                       onClick={handleShowSlotsClick}\n//                     >\n//                       SHOW SLOTS STATUS\n//                     </button>\n//                   </div>\n\n//                   {/* Filtered Bookings Popup */}\n//                   {showFilteredBookings && (\n//                     <div className=\"overlay-bookings\">\n//                       <div className=\"dropdown-bookings mt-3\">\n//                         <button\n//                           className=\"close-button\"\n//                           onClick={() => setShowFilteredBookings(false)}\n//                         >\n//                           &times;\n//                         </button>\n//                         {filteredBookings.length > 0 ? (\n//                           filteredBookings.map((booking, index) => (\n//                             <div\n//                               key={index}\n//                               className=\"upcoming-booking p-2 border\"\n//                             >\n//                               <h5 style={{ color: \"#55ad9b\" }}>\n//                                 {booking.pitch}\n//                               </h5>\n//                               <span>\n//                                 <b>Timing:</b> {booking.timing}\n//                                 <br />\n//                               </span>\n//                               <span>\n//                                 <b>Date:</b> {booking.date}\n//                                 <br />\n//                               </span>\n//                               <span>\n//                                 <b>Booked By:</b> {booking.bookedBy}\n//                                 <br />\n//                               </span>\n//                               <span>\n//                                 <b>Contact:</b> {booking.contact}\n//                                 <br />\n//                               </span>\n//                               <span>\n//                                 <b>Status:</b>{\" \"}\n//                                 {booking.payment ? (\n//                                   // If \"payment\" has a value, display it as plain text\n//                                   <span>{booking.payment}</span>\n//                                 ) : (\n//                                   // If \"payment\" is empty, show two Unpaid\n//                                   <span>{\"UnPaid\"}</span>\n//                                 )}\n//                                 <br />\n//                               </span>\n//                             </div>\n//                           ))\n//                         ) : (\n//                           <p>No bookings found for the selected date.</p>\n//                         )}\n//                       </div>\n//                     </div>\n//                   )}\n//                 </div>\n//               </div>\n//             </div>\n//           </>\n//         )}\n//     </>\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Calendar from \"./Calender\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Reservations() {\n  _s();\n  const {\n    ground_id\n  } = useParams(); // Retrieve ground_id from URL params\n  const navigate = useNavigate();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [showFilteredBookings, setShowFilteredBookings] = useState(false);\n  const [filteredBookings, setFilteredBookings] = useState([]);\n  const [bookings, setBookings] = useState([]);\n  const [authError, setAuthError] = useState(false);\n  useEffect(() => {\n    const token = sessionStorage.getItem(\"authToken\");\n    if (!token) {\n      alert(\"You need to be logged in to access this page.\");\n      navigate(\"/authpageownerlogin\");\n      return;\n    }\n\n    // const fetchBookings = async () => {\n    //   try {\n    //     const response = await axios.get(\n    //       `http://127.0.0.1:8000/bookings/${ground_id}`,\n    //       {\n    //         headers: {\n    //           Authorization: `Bearer ${token}`,\n    //         },\n    //       }\n    //     );\n    //     setBookings(response.data);\n    //   } catch (error) {\n    //     console.error(\"Error fetching bookings:\", error);\n    //     if (error.response?.status === 403) {\n    //       setAuthError(true);\n    //     }\n    //   }\n    // };\n\n    const fetchBookings = async groundId => {\n      try {\n        const response = await axios.get(`http://127.0.0.1:8000/bookings?ground_id=${groundId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.error(\"Error fetching bookings:\", error);\n      }\n    };\n    fetchBookings();\n  }, [ground_id, navigate]);\n  const formatDate = date => {\n    return `${date.getDate()} ${date.toLocaleString(\"default\", {\n      month: \"short\"\n    })} ${date.getFullYear()}`;\n  };\n  const handleShowSlotsClick = () => {\n    if (selectedDate) {\n      const formattedDate = formatDate(selectedDate);\n      const filtered = bookings.filter(booking => booking.date === formattedDate).sort((a, b) => new Date(a.start_time) - new Date(b.start_time));\n      setFilteredBookings(filtered);\n      setShowFilteredBookings(true);\n    } else {\n      alert(\"Please select a date from the calendar!\");\n    }\n  };\n  if (authError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Access Denied\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You are not authorized to view bookings for this ground.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/\"),\n        className: \"btn btn-primary mt-3\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"pt-5\",\n      style: {\n        color: \"#55ad9b\"\n      },\n      children: [\"Upcoming Bookings for Ground ID: \", ground_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reservations\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reservations-list\",\n        children: bookings.length > 0 ? bookings.map(booking => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upcoming-booking p-3 border mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              color: \"#55ad9b\"\n            },\n            children: booking.pitch_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Timing:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 20\n            }, this), \" \", booking.start_time, \" - \", booking.end_time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 20\n            }, this), \" \", booking.booking_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Booked By:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 20\n            }, this), \" \", booking.user_email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Contact:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 20\n            }, this), \" \", booking.user_contact_no]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this), \" \", booking.payment_status || \"UnPaid\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this)]\n        }, booking.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-booking-message text-center mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              color: \"#0d705c\"\n            },\n            children: \"No upcoming bookings!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calender\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-5\",\n          style: {\n            color: \"#55ad9b\"\n          },\n          children: \"Check Upcoming Bookings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n          selectedDate: selectedDate,\n          setSelectedDate: setSelectedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"my-5 btn btn-back\",\n          onClick: handleShowSlotsClick,\n          children: \"SHOW SLOTS STATUS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), showFilteredBookings && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay-bookings\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-bookings mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setShowFilteredBookings(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), filteredBookings.length > 0 ? filteredBookings.map(booking => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upcoming-booking p-2 border\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              color: \"#55ad9b\"\n            },\n            children: booking.pitch_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Timing:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 22\n            }, this), \" \", booking.start_time, \" - \", booking.end_time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 22\n            }, this), \" \", booking.booking_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Booked By:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 22\n            }, this), \" \", booking.user_email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Contact:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 22\n            }, this), \" \", booking.user_contact_no]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 22\n            }, this), \" \", booking.payment_status || \"UnPaid\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 19\n          }, this)]\n        }, booking.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No bookings found for the selected date.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n}\n_s(Reservations, \"WGcrU23ePDG8+gV8rHGugpLX7Gc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Reservations;\nvar _c;\n$RefreshReg$(_c, \"Reservations\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","Calendar","jsxDEV","_jsxDEV","Reservations","_s","ground_id","navigate","selectedDate","setSelectedDate","showFilteredBookings","setShowFilteredBookings","filteredBookings","setFilteredBookings","bookings","setBookings","authError","setAuthError","token","sessionStorage","getItem","alert","fetchBookings","groundId","response","get","headers","Authorization","console","log","data","error","formatDate","date","getDate","toLocaleString","month","getFullYear","handleShowSlotsClick","formattedDate","filtered","filter","booking","sort","a","b","Date","start_time","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","pitch_name","end_time","booking_date","user_email","user_contact_no","payment_status","id","_c","$RefreshReg$"],"sources":["/Users/aukte/Desktop/GroundOwner/src/Components/Reservations.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useLocation } from \"react-router-dom\";\n// import Calendar from \"./Calender\";\n\n// export default function Reservations() {\n//   const location = useLocation();\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [showFilteredBookings, setShowFilteredBookings] = useState(false);\n//   const [filteredBookings, setFilteredBookings] = useState([]);\n//   const [bookings, setBookings] = useState([]);\n\n//   // Fetch bookings from the database on component mount\n//   useEffect(() => {\n//     const fetchBookings = async () => {\n//       try {\n//         const response = await axios.get(`http://127.0.0.1:8000/bookings/${ground_id}`); // Replace with your API endpoint\n//         setBookings(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching bookings:\", error);\n//       }\n//     };\n//     fetchBookings();\n//   }, []);\n\n//   const formatDate = (date) => {\n//     return `${date.getDate()} ${date.toLocaleString(\"default\", {\n//       month: \"short\",\n//     })} ${date.getFullYear()}`;\n//   };\n\n//   const parseTime = (timeString) => {\n//     const [time, meridian] = timeString.split(\" \");\n//     let [hours, minutes] = time.split(\":\").map(Number);\n//     if (meridian === \"PM\" && hours !== 12) hours += 12;\n//     if (meridian === \"AM\" && hours === 12) hours = 0;\n//     return new Date(0, 0, 0, hours, minutes);\n//   };\n\n//   const today = new Date();\n//   const formattedToday = formatDate(today);\n\n//   const upcomingBookings = bookings.filter((booking) => {\n//     const bookingDate = new Date(booking.date);\n//     const todayDate = new Date(formattedToday);\n//     return bookingDate >= todayDate;\n//   });\n\n//   const sortedBookings = upcomingBookings.sort((a, b) => {\n//     const dateA = new Date(a.date);\n//     const dateB = new Date(b.date);\n//     if (dateA - dateB === 0) {\n//       return (\n//         parseTime(a.timing.split(\" - \")[0]) -\n//         parseTime(b.timing.split(\" - \")[0])\n//       );\n//     }\n//     return dateA - dateB;\n//   });\n\n//   const handleShowSlotsClick = () => {\n//     if (selectedDate) {\n//       const formattedDate = formatDate(selectedDate);\n//       const filtered = bookings\n//         .filter((booking) => booking.date === formattedDate)\n//         .sort(\n//           (a, b) =>\n//             parseTime(a.timing.split(\" - \")[0]) -\n//             parseTime(b.timing.split(\" - \")[0])\n//         );\n//       setFilteredBookings(filtered);\n//       setShowFilteredBookings(true);\n//     } else {\n//       alert(\"Please select a date from the calendar!\");\n//     }\n//   };\n\n//   const handlePaymentStatusChange = async (id, newStatus) => {\n//     try {\n//       // Send an update request to the backend\n//       await axios.patch(`http://localhost:5000/api/bookings/${id}`, {\n//         payment: newStatus,\n//       });\n\n//       // Update the local state\n//       const updatedBookings = bookings.map((booking) =>\n//         booking.id === id ? { ...booking, payment: newStatus } : booking\n//       );\n//       setBookings(updatedBookings);\n//     } catch (error) {\n//       console.error(\"Error updating payment status:\", error);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <div className=\"nav-style\">\n//         <div className=\"nav-underline\"></div>\n//       </div>\n\n//       {location.pathname !== \"/authpageownerlogin\" &&\n//         location.pathname !== \"/authpageownersignup\" &&\n//         location.pathname !== \"/revenuegrounddetails\" &&\n//         location.pathname !== \"/viewprofile\" &&\n//         location.pathname !== \"/help\" && (\n//           <>\n//             <div className=\"container my-5\">\n//               <h2 className=\"pt-5\" style={{ color: \"#55ad9b\" }}>\n//                 Upcoming Bookings\n//               </h2>\n//               <div className=\"reservations\">\n//                 <div className=\"reservations-list\">\n//                   {sortedBookings.length > 0 ? (\n//                     sortedBookings.map((booking) => (\n//                       <div\n//                         key={booking.id}\n//                         className=\"upcoming-booking p-3 border mb-2\"\n//                       >\n//                         <h5 style={{ color: \"#55ad9b\" }}>{booking.pitch}</h5>\n//                         <span>\n//                           <b>Timing:</b> {booking.timing}\n//                           <br />\n//                         </span>\n//                         <span>\n//                           <b>Date:</b> {booking.date}\n//                           <br />\n//                         </span>\n//                         <span>\n//                           <b>Booked By:</b> {booking.bookedBy}\n//                           <br />\n//                         </span>\n//                         <span>\n//                           <b>Contact:</b> {booking.contact}\n//                           <br />\n//                         </span>\n//                         <span>\n//                           <b>Status:</b>{\" \"}\n//                           {booking.payment ? (\n//                             <span>{booking.payment}</span>\n//                           ) : (\n//                             <>\n//                               <button\n//                                 onClick={() =>\n//                                   handlePaymentStatusChange(booking.id, \"Paid\")\n//                                 }\n//                                 className=\"btn btn-success btn-sm me-2\"\n//                               >\n//                                 Paid\n//                               </button>\n//                               <button\n//                                 onClick={() =>\n//                                   handlePaymentStatusChange(\n//                                     booking.id,\n//                                     \"UnPaid\"\n//                                   )\n//                                 }\n//                                 className=\"btn btn-warning btn-sm\"\n//                               >\n//                                 UnPaid\n//                               </button>\n//                             </>\n//                           )}\n//                           <br />\n//                         </span>\n//                       </div>\n//                     ))\n//                   ) : (\n//                     <div className=\"no-booking-message text-center mt-3\">\n//                       <h5 style={{ color: \"#0d705c\" }}>No upcoming Booking!</h5>\n//                     </div>\n//                   )}\n//                 </div>\n//                 <div className=\"calender\">\n//                   <h2 className=\"mb-5\" style={{ color: \"#55ad9b\" }}>\n//                     Check Upcoming Bookings\n//                   </h2>\n//                   <Calendar\n//                     selectedDate={selectedDate}\n//                     setSelectedDate={setSelectedDate}\n//                   />\n//                   <div className=\"booked-slots\">\n//                     <button\n//                       className=\"my-5 slots-button dropdown btn-back\"\n//                       onClick={handleShowSlotsClick}\n//                     >\n//                       SHOW SLOTS STATUS\n//                     </button>\n//                   </div>\n\n//                   {/* Filtered Bookings Popup */}\n//                   {showFilteredBookings && (\n//                     <div className=\"overlay-bookings\">\n//                       <div className=\"dropdown-bookings mt-3\">\n//                         <button\n//                           className=\"close-button\"\n//                           onClick={() => setShowFilteredBookings(false)}\n//                         >\n//                           &times;\n//                         </button>\n//                         {filteredBookings.length > 0 ? (\n//                           filteredBookings.map((booking, index) => (\n//                             <div\n//                               key={index}\n//                               className=\"upcoming-booking p-2 border\"\n//                             >\n//                               <h5 style={{ color: \"#55ad9b\" }}>\n//                                 {booking.pitch}\n//                               </h5>\n//                               <span>\n//                                 <b>Timing:</b> {booking.timing}\n//                                 <br />\n//                               </span>\n//                               <span>\n//                                 <b>Date:</b> {booking.date}\n//                                 <br />\n//                               </span>\n//                               <span>\n//                                 <b>Booked By:</b> {booking.bookedBy}\n//                                 <br />\n//                               </span>\n//                               <span>\n//                                 <b>Contact:</b> {booking.contact}\n//                                 <br />\n//                               </span>\n//                               <span>\n//                                 <b>Status:</b>{\" \"}\n//                                 {booking.payment ? (\n//                                   // If \"payment\" has a value, display it as plain text\n//                                   <span>{booking.payment}</span>\n//                                 ) : (\n//                                   // If \"payment\" is empty, show two Unpaid\n//                                   <span>{\"UnPaid\"}</span>\n//                                 )}\n//                                 <br />\n//                               </span>\n//                             </div>\n//                           ))\n//                         ) : (\n//                           <p>No bookings found for the selected date.</p>\n//                         )}\n//                       </div>\n//                     </div>\n//                   )}\n//                 </div>\n//               </div>\n//             </div>\n//           </>\n//         )}\n//     </>\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Calendar from \"./Calender\";\n\nexport default function Reservations() {\n  const { ground_id } = useParams(); // Retrieve ground_id from URL params\n  const navigate = useNavigate();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [showFilteredBookings, setShowFilteredBookings] = useState(false);\n  const [filteredBookings, setFilteredBookings] = useState([]);\n  const [bookings, setBookings] = useState([]);\n  const [authError, setAuthError] = useState(false);\n\n  useEffect(() => {\n    const token = sessionStorage.getItem(\"authToken\");\n\n    if (!token) {\n      alert(\"You need to be logged in to access this page.\");\n      navigate(\"/authpageownerlogin\");\n      return;\n    }\n\n    // const fetchBookings = async () => {\n    //   try {\n    //     const response = await axios.get(\n    //       `http://127.0.0.1:8000/bookings/${ground_id}`,\n    //       {\n    //         headers: {\n    //           Authorization: `Bearer ${token}`,\n    //         },\n    //       }\n    //     );\n    //     setBookings(response.data);\n    //   } catch (error) {\n    //     console.error(\"Error fetching bookings:\", error);\n    //     if (error.response?.status === 403) {\n    //       setAuthError(true);\n    //     }\n    //   }\n    // };\n\n    const fetchBookings = async (groundId) => {\n      try {\n        const response = await axios.get(\n          `http://127.0.0.1:8000/bookings?ground_id=${groundId}`,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        console.log(response.data);\n      } catch (error) {\n        console.error(\"Error fetching bookings:\", error);\n      }\n    };\n    \n\n    fetchBookings();\n  }, [ground_id, navigate]);\n\n  const formatDate = (date) => {\n    return `${date.getDate()} ${date.toLocaleString(\"default\", {\n      month: \"short\",\n    })} ${date.getFullYear()}`;\n  };\n\n  const handleShowSlotsClick = () => {\n    if (selectedDate) {\n      const formattedDate = formatDate(selectedDate);\n      const filtered = bookings\n        .filter((booking) => booking.date === formattedDate)\n        .sort((a, b) => new Date(a.start_time) - new Date(b.start_time));\n      setFilteredBookings(filtered);\n      setShowFilteredBookings(true);\n    } else {\n      alert(\"Please select a date from the calendar!\");\n    }\n  };\n\n  if (authError) {\n    return (\n      <div className=\"container\">\n        <h1 style={{ color: \"red\" }}>Access Denied</h1>\n        <p>You are not authorized to view bookings for this ground.</p>\n        <button\n          onClick={() => navigate(\"/\")}\n          className=\"btn btn-primary mt-3\"\n        >\n          Go Back\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container my-5\">\n      <h2 className=\"pt-5\" style={{ color: \"#55ad9b\" }}>\n        Upcoming Bookings for Ground ID: {ground_id}\n      </h2>\n      <div className=\"reservations\">\n        {/* Booking List */}\n        <div className=\"reservations-list\">\n          {bookings.length > 0 ? (\n            bookings.map((booking) => (\n              <div\n                key={booking.id}\n                className=\"upcoming-booking p-3 border mb-2\"\n              >\n                <h5 style={{ color: \"#55ad9b\" }}>{booking.pitch_name}</h5>\n                <p><b>Timing:</b> {booking.start_time} - {booking.end_time}</p>\n                <p><b>Date:</b> {booking.booking_date}</p>\n                <p><b>Booked By:</b> {booking.user_email}</p>\n                <p><b>Contact:</b> {booking.user_contact_no}</p>\n                <p>\n                  <b>Status:</b> {booking.payment_status || \"UnPaid\"}\n                </p>\n              </div>\n            ))\n          ) : (\n            <div className=\"no-booking-message text-center mt-3\">\n              <h5 style={{ color: \"#0d705c\" }}>No upcoming bookings!</h5>\n            </div>\n          )}\n        </div>\n\n        {/* Calendar */}\n        <div className=\"calender\">\n          <h2 className=\"mb-5\" style={{ color: \"#55ad9b\" }}>\n            Check Upcoming Bookings\n          </h2>\n          <Calendar selectedDate={selectedDate} setSelectedDate={setSelectedDate} />\n          <button\n            className=\"my-5 btn btn-back\"\n            onClick={handleShowSlotsClick}\n          >\n            SHOW SLOTS STATUS\n          </button>\n        </div>\n      </div>\n\n      {/* Filtered Bookings Popup */}\n      {showFilteredBookings && (\n        <div className=\"overlay-bookings\">\n          <div className=\"dropdown-bookings mt-3\">\n            <button\n              className=\"close-button\"\n              onClick={() => setShowFilteredBookings(false)}\n            >\n              &times;\n            </button>\n            {filteredBookings.length > 0 ? (\n              filteredBookings.map((booking) => (\n                <div key={booking.id} className=\"upcoming-booking p-2 border\">\n                  <h5 style={{ color: \"#55ad9b\" }}>{booking.pitch_name}</h5>\n                  <p><b>Timing:</b> {booking.start_time} - {booking.end_time}</p>\n                  <p><b>Date:</b> {booking.booking_date}</p>\n                  <p><b>Booked By:</b> {booking.user_email}</p>\n                  <p><b>Contact:</b> {booking.user_contact_no}</p>\n                  <p><b>Status:</b> {booking.payment_status || \"UnPaid\"}</p>\n                </div>\n              ))\n            ) : (\n              <p>No bookings found for the selected date.</p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM;IAAEC;EAAU,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAC;EACnC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACgB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMqB,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;IAEjD,IAAI,CAACF,KAAK,EAAE;MACVG,KAAK,CAAC,+CAA+C,CAAC;MACtDd,QAAQ,CAAC,qBAAqB,CAAC;MAC/B;IACF;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMe,aAAa,GAAG,MAAOC,QAAQ,IAAK;MACxC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAC9B,4CAA4CF,QAAQ,EAAE,EACtD;UACEG,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUT,KAAK;UAChC;QACF,CACF,CAAC;QACDU,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAGDT,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAAChB,SAAS,EAAEC,QAAQ,CAAC,CAAC;EAEzB,MAAMyB,UAAU,GAAIC,IAAI,IAAK;IAC3B,OAAO,GAAGA,IAAI,CAACC,OAAO,CAAC,CAAC,IAAID,IAAI,CAACE,cAAc,CAAC,SAAS,EAAE;MACzDC,KAAK,EAAE;IACT,CAAC,CAAC,IAAIH,IAAI,CAACI,WAAW,CAAC,CAAC,EAAE;EAC5B,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI9B,YAAY,EAAE;MAChB,MAAM+B,aAAa,GAAGP,UAAU,CAACxB,YAAY,CAAC;MAC9C,MAAMgC,QAAQ,GAAG1B,QAAQ,CACtB2B,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACT,IAAI,KAAKM,aAAa,CAAC,CACnDI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,UAAU,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,UAAU,CAAC,CAAC;MAClElC,mBAAmB,CAAC2B,QAAQ,CAAC;MAC7B7B,uBAAuB,CAAC,IAAI,CAAC;IAC/B,CAAC,MAAM;MACLU,KAAK,CAAC,yCAAyC,CAAC;IAClD;EACF,CAAC;EAED,IAAIL,SAAS,EAAE;IACb,oBACEb,OAAA;MAAK6C,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB9C,OAAA;QAAI+C,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAF,QAAA,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/CpD,OAAA;QAAA8C,QAAA,EAAG;MAAwD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC/DpD,OAAA;QACEqD,OAAO,EAAEA,CAAA,KAAMjD,QAAQ,CAAC,GAAG,CAAE;QAC7ByC,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EACjC;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;EAEA,oBACEpD,OAAA;IAAK6C,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B9C,OAAA;MAAI6C,SAAS,EAAC,MAAM;MAACE,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAU,CAAE;MAAAF,QAAA,GAAC,mCACf,EAAC3C,SAAS;IAAA;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACLpD,OAAA;MAAK6C,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAE3B9C,OAAA;QAAK6C,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/BnC,QAAQ,CAAC2C,MAAM,GAAG,CAAC,GAClB3C,QAAQ,CAAC4C,GAAG,CAAEhB,OAAO,iBACnBvC,OAAA;UAEE6C,SAAS,EAAC,kCAAkC;UAAAC,QAAA,gBAE5C9C,OAAA;YAAI+C,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAU,CAAE;YAAAF,QAAA,EAAEP,OAAO,CAACiB;UAAU;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1DpD,OAAA;YAAA8C,QAAA,gBAAG9C,OAAA;cAAA8C,QAAA,EAAG;YAAO;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACb,OAAO,CAACK,UAAU,EAAC,KAAG,EAACL,OAAO,CAACkB,QAAQ;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/DpD,OAAA;YAAA8C,QAAA,gBAAG9C,OAAA;cAAA8C,QAAA,EAAG;YAAK;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACb,OAAO,CAACmB,YAAY;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1CpD,OAAA;YAAA8C,QAAA,gBAAG9C,OAAA;cAAA8C,QAAA,EAAG;YAAU;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACb,OAAO,CAACoB,UAAU;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7CpD,OAAA;YAAA8C,QAAA,gBAAG9C,OAAA;cAAA8C,QAAA,EAAG;YAAQ;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACb,OAAO,CAACqB,eAAe;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChDpD,OAAA;YAAA8C,QAAA,gBACE9C,OAAA;cAAA8C,QAAA,EAAG;YAAO;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACb,OAAO,CAACsB,cAAc,IAAI,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC;QAAA,GAVCb,OAAO,CAACuB,EAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWZ,CACN,CAAC,gBAEFpD,OAAA;UAAK6C,SAAS,EAAC,qCAAqC;UAAAC,QAAA,eAClD9C,OAAA;YAAI+C,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAU,CAAE;YAAAF,QAAA,EAAC;UAAqB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGNpD,OAAA;QAAK6C,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvB9C,OAAA;UAAI6C,SAAS,EAAC,MAAM;UAACE,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAU,CAAE;UAAAF,QAAA,EAAC;QAElD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLpD,OAAA,CAACF,QAAQ;UAACO,YAAY,EAAEA,YAAa;UAACC,eAAe,EAAEA;QAAgB;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1EpD,OAAA;UACE6C,SAAS,EAAC,mBAAmB;UAC7BQ,OAAO,EAAElB,oBAAqB;UAAAW,QAAA,EAC/B;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGL7C,oBAAoB,iBACnBP,OAAA;MAAK6C,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/B9C,OAAA;QAAK6C,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrC9C,OAAA;UACE6C,SAAS,EAAC,cAAc;UACxBQ,OAAO,EAAEA,CAAA,KAAM7C,uBAAuB,CAAC,KAAK,CAAE;UAAAsC,QAAA,EAC/C;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACR3C,gBAAgB,CAAC6C,MAAM,GAAG,CAAC,GAC1B7C,gBAAgB,CAAC8C,GAAG,CAAEhB,OAAO,iBAC3BvC,OAAA;UAAsB6C,SAAS,EAAC,6BAA6B;UAAAC,QAAA,gBAC3D9C,OAAA;YAAI+C,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAU,CAAE;YAAAF,QAAA,EAAEP,OAAO,CAACiB;UAAU;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1DpD,OAAA;YAAA8C,QAAA,gBAAG9C,OAAA;cAAA8C,QAAA,EAAG;YAAO;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACb,OAAO,CAACK,UAAU,EAAC,KAAG,EAACL,OAAO,CAACkB,QAAQ;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/DpD,OAAA;YAAA8C,QAAA,gBAAG9C,OAAA;cAAA8C,QAAA,EAAG;YAAK;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACb,OAAO,CAACmB,YAAY;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1CpD,OAAA;YAAA8C,QAAA,gBAAG9C,OAAA;cAAA8C,QAAA,EAAG;YAAU;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACb,OAAO,CAACoB,UAAU;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7CpD,OAAA;YAAA8C,QAAA,gBAAG9C,OAAA;cAAA8C,QAAA,EAAG;YAAQ;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACb,OAAO,CAACqB,eAAe;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChDpD,OAAA;YAAA8C,QAAA,gBAAG9C,OAAA;cAAA8C,QAAA,EAAG;YAAO;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC,EAACb,OAAO,CAACsB,cAAc,IAAI,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GANlDb,OAAO,CAACuB,EAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOf,CACN,CAAC,gBAEFpD,OAAA;UAAA8C,QAAA,EAAG;QAAwC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC/C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClD,EAAA,CAtKuBD,YAAY;EAAA,QACZL,SAAS,EACdC,WAAW;AAAA;AAAAkE,EAAA,GAFN9D,YAAY;AAAA,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}